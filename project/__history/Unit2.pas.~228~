unit Unit2;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls,
  Vcl.ExtCtrls, Math, QuadTreeUnit, MyTypes,
  BoidUnit, MetakUnit, GunUnit, PlayerUnit, GameUnit;

type
  TForm2 = class(TForm)
    Image1: TImage;
    Timer1: TTimer;
    Label1: TLabel;
    Label2: TLabel;
    Button1: TButton;
    procedure FormCreate(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure FormResize(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure Image1MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
  private
    { Private declarations }
  public
    game : TGame;
    procedure update;
  end;


var
  Form2: TForm2;


implementation

{$R *.dfm}


procedure TForm2.Button1Click(Sender: TObject);
var
  i : integer;
begin

  game.gameReset;

  if not Timer1.Enabled then
  begin
    Timer1.Enabled := true;
  end;

  button1.Enabled := false;

end;

procedure TForm2.FormCreate(Sender: TObject);
var
  i : integer;
begin

  game := TGame.create;

  timer1.Enabled :=  True;
  button1.Enabled := false;

end;

procedure TForm2.FormDestroy(Sender: TObject);
var
  i : integer;
begin

  timer1.Enabled := false;
  game.Free;
end;



{ TForm }

procedure TForm2.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
var
  pP : TVector3f;
  pS : TVector3f;
begin

  pP := game.player.pozicija;
  pS := game.player.smjer;

  case Key of
    VK_LEFT:
    begin
      pP[0] :=  pP[0] - pS[0];
      game.player.move(pP,bounds(0, 0, Image1.Width, Image1.Height));
    end;

    VK_RIGHT:
    begin
      pP[0] :=  pP[0] + pS[0];
      game.player.move(pP,bounds(0, 0, Image1.Width, Image1.Height));
    end;

    VK_SPACE:
    begin
      if game.player.gun is TMine then
      begin
        exit;
      end;
      if game.player.gun.ammo > 0 then
      begin
        if game.player.gun.cd <= 0 then
        begin
          game.metakList.Add(game.player.gun.fire);
        end;
      end
      else
      begin
        ShowMessage('Reload.');
      end;
    end;

    VK_RETURN:
    begin
       game.player.gun.ammo := game.player.gun.maxAmmo;
    end;

    VK_UP:
    begin

      game.player.gunNxt;

    end;

    VK_DOWN:
    begin

      game.player.gunPrev;

    end;
  end;

end;

procedure TForm2.FormResize(Sender: TObject);
begin

  game.setSize(Image1.Width, Image1.Height);

end;

procedure TForm2.Image1MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin

//   if player.gun is TMine then
//  begin
//
//    metakList.Add(player.gun.fire);
//
//  end;

end;

procedure TForm2.Timer1Timer(Sender: TObject);
begin

  game.gameTick;

  update;

end;

procedure TForm2.update;
var
  btm : TBitmap;
begin

  btm := game.render;

  Image1.Picture.Assign(btm);

  btm.Free;

end;

end.
